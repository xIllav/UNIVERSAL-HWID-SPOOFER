#pragma once

bool InitializeExploits(uintptr_t CurrentPawn) {
	uintptr_t CurrentWeapon = read<uintptr_t>(LocalPawn + offsets::CurrentWeapon);

	if (Settings::NoAnimation and CurrentWeapon) {
		write<bool>(CurrentWeapon + offsets::bDisableEquipAnimation, true);
	}
	else {
		write<bool>(CurrentWeapon + offsets::bDisableEquipAnimation, false);
	}

	if (Settings::AimWhileJumping and CurrentWeapon) {
		write<bool>(CurrentWeapon + offsets::bADSWhileNotOnGround, true);
	}
	else {
		write<bool>(CurrentWeapon + offsets::bADSWhileNotOnGround, false);
	}
	
	if (Settings::InstantRevive) {
		write<float>(LocalPawn + offsets::ReviveFromDBNOTime, 0.101);
	}
	
	if(Settings::AirStuck and No_Discord::GetAsyncKeyState(VK_MENU)){ //Alt Keybind
		write<float>(LocalPawn + offsets::CustomTimeDilation, 0);
	}
	else if(Settings::AirStuck and !No_Discord::GetAsyncKeyState(VK_MENU)){ //Alt Keybind
		write<float>(LocalPawn + offsets::CustomTimeDilation, 1);
	}
	
	if(Settings::RapidFire and CurrentWeapon){
		float a = read<float>(CurrentWeapon + offsets::LastFireTime);
		float b = read<float>(CurrentWeapon + offsets::LastFireTimeVerified);
		write<float>(CurrentWeapon + offsets::LastFireTime, a + b - 0.0003); //RapidFire value
	}
	return true;
}
